{
  "$schema": "http://json-schema.org/draft-07/schema",

  "type": "object",
  "required": ["$schema","imports","enums","endpoints"],
  "additionalProperties": false,

  "properties": {
    "$schema": { "type": "string" },

    "imports": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-zA-Z_][a-zA-Z0-9_]*$": { "type": "string" }
      }
    },
    
    "enums": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[A-Z][a-zA-Z0-9_]*$": { 
          "type": "array",
          "minItems": 1,
          "items": { "type": "string" }
        }
      }
    },

    "endpoints": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-z][a-zA-Z0-9_]*$": {
          "type": "object",
          "required": ["method", "path"],
          "additionalProperties": false,
          "properties": {
            "method": { "type": "string", "enum": ["get","post","patch","put","delete"], "description": "The HTTP method to use." },
            "path": { "type": "string", "format": "uri-reference", "description": "The endpoint path in Discord's API." },

            "path_schema": { 
              "$ref": "#/definitions/parameter_schema",
              "description": "Function parameters to be interpolated into the endpoint path."
            },

            "body_schema": { 
              "$ref": "#/definitions/parameter_schema",
              "description": "Function parameters to be included in the request body."
            },

            "query_schema": { 
              "$ref": "#/definitions/parameter_schema",
              "description": "Function parameters to be serialized as query parameters."
            }
          }
        }
      }
    }
  },

  "definitions": {
    "parameter": {
      "type": ["string", "object"],
      "required": ["type"],
      "additionalProperties": false,
      "properties": {
        "type": { "$ref": "#/definitions/ts_type" },
        "optional": { "type": "boolean", "description": "If true, the parameter will be optional." },
        "nullable": { "type": "boolean", "description": "If true, the parameter will be nullable." },
        "default": { "type": "string", "description": "The default value of the parameter." }
      }
    },

    "parameter_schema": {
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "patternProperties": {
        "^[a-zA-Z_][a-zA-Z0-9_]*$": { "$ref": "#/definitions/parameter" }
      },
      "default": {}
    },

    "ts_type": { 
      "type": "string", 
      "description": "The Typescript type of this parameter.",
      "examples": [ "string", "number", "boolean", "string[]" ]
    }
  }
}
